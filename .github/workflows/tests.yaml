---
name: Tests
on:
  pull_request:
  push:
    branches: [attackingRL]

  # Run once a week (see https://crontab.guru)
  schedule:
    - cron: "0 0 * * 0"

env:
  PYTHON_VERSION: 3.8.8
  PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: python
  SECONDS: 120

jobs:
  tests:
    name: Run tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Set up git repository
        uses: actions/checkout@v2
        with:
          ref: attackingRL

      - name: Install dependencies
        run: |
          if [ "${RUNNER_OS}" == "Linux" ]; then
            sudo apt update
            sudo apt install -y expect \
            python3-opengl \
            xvfb
            echo 'export PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python' >> "${HOME}/.bashrc"
            source "${HOME}/.bashrc"
          elif [ "${RUNNER_OS}" == "macOS" ]; then
            brew install expect
            brew install --cask anaconda
            export PATH="/usr/local/anaconda3/bin:$PATH"
            echo 'export PATH="/usr/local/anaconda3/bin:$PATH"' >> "${HOME}/.zshrc"
            echo 'export PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python' >> "${HOME}/.zshrc"
            source "${HOME}/.zshrc"
          else
            echo "${RUNNER_OS} not supported"
            exit 1
          fi

      - name: Populate action files
        run: |
          if [ "${RUNNER_OS}" == "Linux" ]; then
            cp .github/files/environment-Linux.yml ./environment.yml
          elif [ "${RUNNER_OS}" == "macOS" ]; then
            cp .github/files/environment-Darwin.yml ./environment.yml
          else
            echo "${RUNNER_OS} not supported"
            exit 1
          fi
          cp .github/files/cart_pole.exp ./cart_pole.exp

      - name: Setup Anaconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: counterfit
          auto-update-conda: true
          python-version: ${{ env.PYTHON_VERSION }}
          environment-file: environment.yml

      - name: Setup test environment
        shell: bash -l {0}
        run: |
          pip install -r requirements.txt
          echo "PYTHON_PATH=$(which python)" >> $GITHUB_ENV

      - name: Test install
        shell: bash -l {0}
        run: |
          echo 'exit counterfit' | python counterfit.py
          if [[ $? != 0 ]]; then
              echo "Install of counterfit failed!"
          fi

      - name: Test cart_pole attack for n minutes
        uses: GabrielBB/xvfb-action@v1
        with:
          run: expect -d ./cart_pole.exp ${{ env.PYTHON_PATH }} ${{ env.SECONDS }}

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3

      - name: Report failure
        uses: nashmaniac/create-issue-action@v1.1
        # Only report failures of pushes (PRs have are visible through the Checks section)
        # to the default branch
        if: failure() && github.event_name == 'attackingRL' && github.ref == 'refs/heads/attackingRL'
        with:
          title: üêõ Coverage report failed for ${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: kind/bug
          body: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
